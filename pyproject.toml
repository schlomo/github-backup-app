[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "github-backup-app"
dynamic = ["version"]
description = "Backup GitHub repositories and metadata using GitHub App authentication"
readme = "README.md"
license = { file = "LICENSE.txt" }
authors = [
    { name = "Schlomo Schapiro", email = "schlomo+github-backup-app@schapiro.org" },
]
maintainers = [
    { name = "Schlomo Schapiro", email = "schlomo+github-backup-app@schapiro.org" },
]
keywords = ["github", "backup", "git", "repository"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Topic :: System :: Archiving :: Backup",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
requires-python = ">=3.12"
dependencies = [
    "PyJWT>=2.0.0",
    "cryptography>=3.0.0",
    "requests>=2.25.0",
    "flask>=3.0.0",
]

[project.optional-dependencies]
dev = [
    "autopep8==2.3.2",
    "black==25.1.0",
    "flake8==7.3.0",
    "gitchangelog==3.0.4",
    "keyring==25.6.0",
    "pkginfo==1.12.1.2",
    "tqdm==4.67.1",
    "twine==6.1.0",
]

[project.scripts]
github-backup = "github_backup.__main__:main"
github-backup-create-app = "github_backup.create_github_app:main"

[project.urls]
Homepage = "https://github.com/schlomo/github-backup-app"
Repository = "https://github.com/schlomo/github-backup-app"
Issues = "https://github.com/schlomo/github-backup-app/issues"

[tool.hatch.build.targets.wheel]
packages = ["github_backup"]

[tool.hatch.version]
path = "github_backup/__init__.py"

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.flake8]
max-line-length = 88
extend-ignore = ["E501", "W503", "F401", "F541", "F824", "F841", "E203"]
exclude = [
    ".git",
    "__pycache__",
    "venv",
    ".venv",
    "build",
    "dist",
    "*.egg-info",
]

[tool.ruff]
line-length = 88
target-version = "py312"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
